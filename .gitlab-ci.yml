image: python:latest
volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
services:
  postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    image: tdev800api_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./postgres/.postgres
    ports:
      - "5432:5432"

# This folder is cached between builds
# http://docs.gitlab.com/ee/ci/yaml/README.html#cache
cache:
  paths:
    - ~/.cache/pip/

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - python -V
  - pip install -r requirements.txt

test:
  variables:
    DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DB"
  script:
    - cd api
    - python manage.py makemigrations
    - python manage.py test
build:
  variables:
    DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DB"
  script:
    - cd api
    - python manage.py makemigrations
# deploy:
#  variables:
#    DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DB"
#  script:
#    - cd api
#    - python manage.py makemigrations
#    - python manage.py runserver